# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  tags:
    include:
    - v*

stages:
- stage: Build
  jobs:
    - job: Build

      pool:
        vmImage: 'ubuntu-latest'

      steps:
      - task: UseNode@1
        inputs:
          version: '12.x'

      - task: Npm@1
        inputs:
          command: 'install'
        displayName: 'npm install'

      - script: |
          npm run build
        displayName: 'npm run build'

      - script: |
          npm pack
        displayName: 'Package for npm release'

      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(Build.SourcesDirectory)'
          Contents: '*.tgz'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/npm'
        displayName: 'Copy npm package'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/npm'
          ArtifactName: 'npm'
          publishLocation: 'Container'
        displayName: 'Publish npm package as artifacts'

      # - task: CopyFiles@2
      #   inputs:
      #     SourceFolder: '$(Build.SourcesDirectory)/dist'
      #     Contents: '**'
      #     TargetFolder: '$(Build.ArtifactStagingDirectory)/dist'
      #   displayName: 'Copy dist output'

      # - task: PublishBuildArtifacts@1
      #   inputs:
      #     PathtoPublish: '$(Build.ArtifactStagingDirectory)/dist'
      #     ArtifactName: 'dist'
      #     publishLocation: 'Container'
      #   displayName: 'Publish dist files as artifacts'
        
- stage: Deploy
  jobs:
    - job: Deploy

      pool:
        vmImage: 'ubuntu-latest'

      steps:

      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'npm'
          downloadPath: '$(System.ArtifactsDirectory)'

      - bash: |
          cd $(System.ArtifactsDirectory)/npm
          pName=$(ls *.tgz)
          echo "##vso[task.setvariable variable=packageDirectory]$(System.ArtifactsDirectory)/npm/$pName"
          echo Package directory: $(packageDirectory)

      - task: ExtractFiles@1
        inputs:
          archiveFilePatterns: '$(packageDirectory)'
          destinationFolder: '$(System.DefaultWorkingDirectory)/dist'
          cleanDestinationFolder: true

      - task: Npm@1
        inputs:
          command: 'publish'
          workingDir: '$(System.DefaultWorkingDirectory)/dist/package'
          publishRegistry: 'useFeed'
          publishFeed: '6b012f77-8e3a-4f4e-a986-9f88bfc74126/60c533ae-4de6-403b-9bde-ecadc2b398bf'